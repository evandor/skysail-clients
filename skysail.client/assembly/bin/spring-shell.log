// Spring Shell 1.1.0.RELEASE log opened at 2014-09-11 09:54:00
help
showHeader
links
pwd
pwd
exit
// Spring Shell 1.1.0.RELEASE log closed at 2014-09-11 10:54:08
// Spring Shell 1.1.0.RELEASE log opened at 2014-09-11 11:06:38
get
exit
// Spring Shell 1.1.0.RELEASE log closed at 2014-09-11 11:09:49
// Spring Shell 1.1.0.RELEASE log opened at 2014-09-11 11:09:51
help
pwd
options
post --data '{}'
help
exit
// Spring Shell 1.1.0.RELEASE log closed at 2014-09-11 13:19:33
// Spring Shell 1.1.0.RELEASE log opened at 2014-09-11 13:21:37
help
get
get
pwd
exit
// Spring Shell 1.1.0.RELEASE log closed at 2014-09-11 13:22:15
// Spring Shell 1.1.0.RELEASE log opened at 2014-09-11 13:23:19
pwd
get
setHost localhost
setPort 2016
setHeader Accept=application/json
env --showRequestHeaders false
env --showResponseHeaders false
env --showBody false
cd
login --u admin --p skysail
get
get --uri usermanagement
get --uri currentuser
assert --body username=admin
cd
env --showRequestHeaders true
env --showResponseHeaders true
env --showBody true
get
get --uri usermanagement
get --uri registration
// script test.run
setHost localhost
setPort 2016
setHeader Accept=application/json
env --showRequestHeaders true
env --showResponseHeaders true
env --showBody true
cd
// script ccd.run
pwd
login --u admin --p skysail
get
get
get
get
get
get
get
get
get
logout
get
login --u admin --p skysail
get
get
cd dbclient
get
// [failed] get --rel cre
// [failed] get --rel create
cd ..
pwd
help
get
pwd
cd ..
pwd
cd usermanagement
head
get --uri current
cd ..
pwd
pwd
links
get
links
get --uri re
pwd
cd ..
pwd
links
get
get --uri regist
post --data '{ "id" : null, "password" : null, "pwdRepeated" : null, "username" : "test"}'
post --data '{ "id" : null, "password" : "tester", "pwdRepeated" : null, "username" : "test"}'
post --data '{ "id" : null, "password" : "tester", "pwdRepeated" : null, "username" : "carsten.graef@kvb.de"}'
post --data '{ "id" : null, "password" : "tester", "pwdRepeated" : "tester", "username" : "carsten.graef@kvb.de"}'
post --data '{ "id" : null, "password" : "tester", "pwdRepeated" : "tester", "username" : "carsten.graef@kvb.de"}'
help
pwd
exit
// Spring Shell 1.1.0.RELEASE log closed at 2014-09-11 14:10:24
// Spring Shell 1.1.0.RELEASE log opened at 2014-09-11 14:40:05
// [failed] get
pwd
exit
// Spring Shell 1.1.0.RELEASE log closed at 2014-09-11 14:40:13
// Spring Shell 1.1.0.RELEASE log opened at 2014-09-11 14:40:17
setHost ciargus
setPort 8080
pwd
setHeader Accept=application/json
cd /jenkins/job/argus.1.RELEASE/747/api/json
pwd
get
cd /jenkins/job/argus.1.RELEASE/747/api/json?pretty=true
get
cd /jenkins/job/argus.1.RELEASE/767/api/json?pretty=true
get
exit
// Spring Shell 1.1.0.RELEASE log closed at 2014-09-11 14:45:17
// Spring Shell 1.1.0.RELEASE log opened at 2014-09-11 14:45:20
setHost localhost
setPort 2016
setHeader Accept=application/json
env --showRequestHeaders true
env --showResponseHeaders true
env --showBody true
cd
// script jenkins.run
setHost ciargus
setPort 8080
setHeader Accept=application/json
env --showRequestHeaders true
env --showResponseHeaders true
env --showBody true
cd /jenkins/job/argus.1.RELEASE/767/api/json?pretty=true
// script jenkins.run
get
exit
// Spring Shell 1.1.0.RELEASE log closed at 2014-09-11 14:45:44
// Spring Shell 1.1.0.RELEASE log opened at 2014-09-11 14:52:58
exit
// Spring Shell 1.1.0.RELEASE log closed at 2014-09-11 14:53:28
// Spring Shell 1.1.0.RELEASE log opened at 2014-09-11 15:02:29
help
pwd
setHost ciargus
setPort 8080
setHeader Accept=application/json
env --showRequestHeaders true
env --showResponseHeaders true
env --showBody true
cd /jenkins/job/argus.1.RELEASE/767/api/json?pretty=true
// script jenkins.run
pwd
get
setHost localhost
setPort 2016
setHeader Accept=application/json
env --showRequestHeaders true
env --showResponseHeaders true
env --showBody true
cd
// script ccd.run
pwd
// [failed] get
get
login --u admin --p skysail
pwd
get
cd test
get
cd ..
get
get --uri user
get --rel  create
post --data '{ "id" : null, "password" : null, "pwdRepeated" : null, "username" : "test"}'
post --data '{ "id" : null, "password" : "tester", "pwdRepeated" : "teste", "username" : "test@test.de"}'
post --data '{ "id" : null, "password" : "tester", "pwdRepeated" : "tester", "username" : "test@test.de"}'
post --data '{ "id" : null, "password" : "tester", "pwdRepeated" : "tester", "username" : "test@test.de"}'
setHost localhost
setPort 2016
setHeader Accept=application/json
env --showRequestHeaders false
env --showResponseHeaders false
env --showBody false
cd
login --u admin --p skysail
get
get --uri usermanagement
get --uri currentuser
assert --body username=admin
cd
env --showRequestHeaders true
env --showResponseHeaders true
env --showBody true
get
get --uri usermanagement
get --uri registration
// script test.run
cd /usermanagement/currentUser
get
cd
pwd
get
get
logout
logout
// Spring Shell 1.1.0.RELEASE log opened at 2014-09-12 10:28:40
// Spring Shell 1.1.0.RELEASE log opened at 2014-09-12 10:29:21
help
get
login --u admin --p skysail
get
get
// Spring Shell 1.1.0.RELEASE log opened at 2014-09-12 13:19:27
// [failed] get
exit
// Spring Shell 1.1.0.RELEASE log closed at 2014-09-12 17:24:15
// Spring Shell 1.1.0.RELEASE log opened at 2014-09-15 10:38:56
help
exit
// Spring Shell 1.1.0.RELEASE log closed at 2014-09-15 10:39:50
// Spring Shell 1.1.0.RELEASE log opened at 2014-09-15 10:57:14
help
get
login --u admin --p skysail
login --u admin --p skysail
// script notestest.run
login --u admin --p skysail
get
// script notestest.run
login --u admin --p skysail
get
// [failed] assert --body username=admin
// [failed] script notestest.run
exit
// Spring Shell 1.1.0.RELEASE log closed at 2014-09-15 11:18:25
// Spring Shell 1.1.0.RELEASE log opened at 2014-09-15 11:18:27
login --u admin --p skysail
get
// [failed] assert --body username=admin
// [failed] script notestest.run
exit
// Spring Shell 1.1.0.RELEASE log closed at 2014-09-15 12:37:51
// Spring Shell 1.1.0.RELEASE log opened at 2014-09-15 12:37:54
login --u admin --p skysail
login --u admin --p skysail
get
// [failed] script notestest.run
login --u admin --p skysail
get
// [failed] script notestest.run
login --u admin --p skysail
get
// [failed] script notestest.run
// [failed] assert --link "uri uri uri"
// [failed] assert --link "uri uri exists"
// [failed] assert --link "uri notes exists"
links
assert --link "uri /notes exists"
exit
// Spring Shell 1.1.0.RELEASE log closed at 2014-09-15 13:08:33
// Spring Shell 1.1.0.RELEASE log opened at 2014-09-15 13:08:34
exit
// Spring Shell 1.1.0.RELEASE log closed at 2014-09-15 13:09:50
// Spring Shell 1.1.0.RELEASE log opened at 2014-09-15 13:09:53
// [failed] assert --link "uri /notes exists"
exit
// Spring Shell 1.1.0.RELEASE log closed at 2014-09-15 13:13:39
// Spring Shell 1.1.0.RELEASE log opened at 2014-09-15 13:13:41
cd
login --u admin --p skysail
get
assert --link "uri /notes exists"
// script notestest.run
cd
login --u admin --p skysail
get
assert --link "title Notes exists"
// script notestest.run
get --title  Notes
get
cd
login --u admin --p skysail
get
assert --link "title Notes exists"
get --title Notes
// script notestest.run
cd
login --u admin --p skysail
get
assert --link "title Notes exists"
get --title Notes
// script notestest.run
get
get
get
get
get --title list
cd
login --u admin --p skysail
get
assert --link "title Notes exists"
get --title Notes
get --title list
get
get --title notes
get --rel create_form
cd
login --u admin --p skysail
get
assert --link "title Notes exists"
get --title Notes
get --title notes
get --rel create_form
// script notestest.run
links
post --rel next --data '{"content": "test"}'
setHeader --Accept application/json
post --data '{"content": "test"}'
pwd
cd ..
pwd
get
links
cd notes
get
head
get --rel cre
post --data '{"content": "test"}'
post --data '{"content": "test"}'
post --data '{"content": "test"}'
post --data '{"content": "test"}'
post --data '{"content": "test"}'
post --data '{"content": "test"}'
exit
// Spring Shell 1.1.0.RELEASE log closed at 2014-09-15 17:10:45
// Spring Shell Unknown Version log opened at 2014-09-17 11:23:42
help
// [failed] get
get
assert 
exit
// Spring Shell Unknown Version log closed at 2014-09-17 11:27:42
// Spring Shell Unknown Version log opened at 2014-09-17 11:27:51
get
assert --status 200
exit
// Spring Shell Unknown Version log closed at 2014-09-17 11:28:23
// Spring Shell Unknown Version log opened at 2014-09-17 11:28:25
// [failed] get
exit
// Spring Shell Unknown Version log closed at 2014-09-17 11:29:15
// Spring Shell Unknown Version log opened at 2014-09-17 11:29:17
get
assert --status 200
// Spring Shell Unknown Version log opened at 2014-09-17 11:48:27
exit
// Spring Shell Unknown Version log closed at 2014-09-17 11:48:32
// Spring Shell Unknown Version log opened at 2014-09-17 12:36:00
// [failed] assert --status 200
// [failed] assert --status 200
// [failed] assert --status 200
// [failed] assert --status 200
// [failed] assert --status 200
exit
// Spring Shell Unknown Version log closed at 2014-09-17 12:44:53
// Spring Shell Unknown Version log opened at 2014-09-17 12:44:54
// Spring Shell Unknown Version log opened at 2014-09-17 12:45:24
// [failed] get
get
get
assert --status 200
// Spring Shell Unknown Version log opened at 2014-09-17 13:38:14
get
// Spring Shell Unknown Version log opened at 2014-09-25 16:34:46
exit
// Spring Shell Unknown Version log closed at 2014-09-25 16:39:01
// Spring Shell Unknown Version log opened at 2014-09-25 16:51:04
help
// [failed] get
setPort 2016
// Spring Shell Unknown Version log opened at 2014-09-25 18:47:14
help
setPort 2016
exit
// Spring Shell Unknown Version log closed at 2014-09-25 18:47:24
// Spring Shell Unknown Version log opened at 2014-09-26 06:40:05
// [failed] get
